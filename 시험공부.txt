객체: 실생활에 존재하는 실체의 존재들을 컴퓨터 게임프로그래밍상에서 실체화한 구조물로 변환
게임: 가상월드에 존재하는 여러 객체들의 상호작용
게임의 기본 구성요소: 배경, 오브젝트, UI, AI, 사운드

jpg vs png
jpg: 손실 압축 파일 포맷, 화질 저하가 있을 수 있음, 알파값 없음
png: 비손실 압축 파일 포맷, 알파값 존재

입력 처리과정
입력 이벤트들을 폴링->이벤트의 종류를 구분-> 실제 입력값을 구함

더블 버퍼링: 다음 프레임에 그릴 화면을 백버퍼에 그리고 다음 프레임에 프론트 버퍼와 스왑해주는 것

스프라이트: 게임 장면안에서 보여지는 이미지 또는 애니매이션되는 오브젝트

애니메이션: 여러개의 이미지를 일정한 시간 간격으로 통해서 화면에 뿌림으로써, 
	   물체가 움직이는 효과를 주는 것

p3 벡터위 t% 지점의 점을 m(t)라고 하면,
m(t)=(1-t)p1+tp2

곡선공식(점 3개)
(2t**2-3t+1)*첫번째 점+(-4t**2+4t)*두번째점+(2t**2-t)*세번째점

곡선공식(점4개)
((-t**3 + 2t**2 - t)*첫번째 점 + (3t**3 - 5t**2 + 2)*두번째점 +
 (-3t**3 + 4t**2 + t)*세번째점 +(t**3 - t**2)* 네번째 점)/2

추상화: 꼭 필요한 객체들만, 꼭 보여줘야할 내용, 보여줘야할 움직임만 표현 하는것
	객체들의 공통된 특성을 파악하고 불필요한 특성을 제거하는것

속성: 객체의 상태, 객체가 가지는 특징
행위: 객체의 상태를 바꾸어 주는것

객체가 움직이는 이유
 스스로 움직이는 객체, 물리적으로 움직이는 객체, 플레이어가 움직임
1. 지능이 있다(인공지능), 2. 물리가 작용(게임물리), 3. 플레이어가 컨트롤 한다(입출력).

속성+행위= 객체

객체지향 프로그래밍(Object Oriented Programming)
데이터를 추상화시켜 속성과 행위를 가진 객체를 만들고
 그 객체들 간의 상호작용을 통해 로직을 구성하는 프로그래밍 방법

클래스: 객체를 생성하기 위한 문법적 구조, 객체를 찍어내는 도장

객체를 생성하는 과정: Object Instantiation
인스턴스= 생성된 객체

클래스는 여러개의 맴버 함수로 구현됨


게임의 기본 구조
Initialize->Game_Logic->Draw->Exit
		    - N or Y
		if N: goto Game_Logic
		else if Y: Finish



파이썬 모듈은 정의와 문장으로 이루어져있다.
모듈은 import하면 실행한다.( 문장이 존재할 경우)

모듈 자체로도 실행 가능, 다른 모듈에서 import해서 사용할 수 있음
Import되면, 그 자체가 하나의 객체가 됨

__name__: Import하지 않고 직접 실행하면, __main__이라는 문자열 반환
	다른 모듈에서 사용할 경우 그 값은 모듈의 이름


run(state):		state를 시작 게임 상태로 하여, 게임 실행을 시작함
chage_state(state):	게임 상태를 state로 변화, 이전 게임 상태를 완전히 나옴
pust_state(state):	게임상태를 state로 변화, 이전 게임 상태는 남아있음
pop_state():	이전 게임 상태로 복귀
quit():		게임을 중단























